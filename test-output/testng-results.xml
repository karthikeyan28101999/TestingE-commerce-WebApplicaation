<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-08-14T20:04:37 IST" name="Suite" finished-at="2022-08-14T20:07:05 IST" duration-ms="147858">
    <groups>
    </groups>
    <test started-at="2022-08-14T20:04:37 IST" name="home" finished-at="2022-08-14T20:06:45 IST" duration-ms="128341">
      <class name="test.HomeTest">
        <test-method is-config="true" signature="start()[pri:0, instance:test.HomeTest@3932c79a]" started-at="2022-08-14T20:04:37 IST" name="start" finished-at="2022-08-14T20:05:18 IST" duration-ms="41047" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method signature="titleVerify()[pri:0, instance:test.HomeTest@3932c79a]" started-at="2022-08-14T20:05:18 IST" name="titleVerify" finished-at="2022-08-14T20:06:36 IST" duration-ms="77834" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [2] but found [1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [2] but found [1]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at test.HomeTest.titleVerify(HomeTest.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- titleVerify -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.HomeTest@3932c79a]" started-at="2022-08-14T20:06:39 IST" name="tearDown" finished-at="2022-08-14T20:06:45 IST" duration-ms="6346" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.HomeTest -->
    </test> <!-- home -->
    <test started-at="2022-08-14T20:04:37 IST" name="login" finished-at="2022-08-14T20:07:05 IST" duration-ms="147858">
      <class name="test.logintest">
        <test-method is-config="true" signature="start()[pri:0, instance:test.logintest@5e3f861]" started-at="2022-08-14T20:04:37 IST" name="start" finished-at="2022-08-14T20:05:18 IST" duration-ms="41173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:test.logintest@5e3f861]" started-at="2022-08-14T20:05:18 IST" name="login" data-provider="userData" finished-at="2022-08-14T20:06:47 IST" duration-ms="89247" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[monkey@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[monkey]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sucessfull]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:test.logintest@5e3f861]" started-at="2022-08-14T20:06:47 IST" name="login" data-provider="userData" finished-at="2022-08-14T20:06:53 IST" duration-ms="6076" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[monkey@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[donkey]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[unsucessfull]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:test.logintest@5e3f861]" started-at="2022-08-14T20:06:53 IST" name="login" data-provider="userData" finished-at="2022-08-14T20:06:57 IST" duration-ms="4073" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[donkey@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[monkey]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[unsucessful]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:test.logintest@5e3f861]" started-at="2022-08-14T20:06:57 IST" name="login" data-provider="userData" finished-at="2022-08-14T20:07:02 IST" duration-ms="4078" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[donkey@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[donkey]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[unsucessful]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.logintest@5e3f861]" started-at="2022-08-14T20:07:02 IST" name="tearDown" finished-at="2022-08-14T20:07:05 IST" duration-ms="3119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.logintest -->
    </test> <!-- login -->
  </suite> <!-- Suite -->
</testng-results>
